<Project ToolsVersion="15.0">
  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug-NoEmit'">
    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug' Or '$(Configuration)'=='Release'">
    <DefineConstants>$(DefineConstants);TYPESHAPE_EMIT</DefineConstants>
  </PropertyGroup>

  <!-- NuGet Metadata -->
  <PropertyGroup>
    <Description>Practical Generic Programming for F#</Description>
    <Authors>Eirik Tsarpalis</Authors>
    <Copyright>2019</Copyright>
    <PackageTags>fsharp, f#, polytypic</PackageTags>
    <RepositoryUrl>https://github.com/eiriktsarpalis/TypeShape</RepositoryUrl>
    <PackageProjectUrl>https://github.com/eiriktsarpalis/TypeShape</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RepositoryType>git</RepositoryType>
    <!-- SourceLink Options -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <!--<IncludeSymbols>true</IncludeSymbols>-->
    <!--<SymbolPackageFormat>snupkg</SymbolPackageFormat>-->
  </PropertyGroup>

  <!-- P2P nuget inlining workaround: c.f. http://yer.ac/blog/2019/09/05/dotnet-pack-project-reference-and-nuget-dependency/ -->
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>
</Project>
